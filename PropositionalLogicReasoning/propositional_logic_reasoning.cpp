/***********************************************************
* File:     propositional_logic_reasoning.cpp
* Author:   Xiaolong Ma(马小龙)
* E-mail:   2353814@tongji.edu.cn
* Function: Propositional logic reasoning
* Encoding: UTF-8
* Date:     2024.10.19
* Update:   2024.11.27
***********************************************************/

#include <iostream>

/***********************************************************
* Function Name:   main
* Function:        
* Input Parameter: 命题逻辑推理
* Returned Value:  0
***********************************************************/
int main()
{
    //标语
    std::cout << ("*******************************************\n")
              << ("**                                       **\n")
              << ("**         欢迎进入命题逻辑推理系统      **\n")
              << ("**                                       **\n")
              << ("*******************************************\n\n\n");

    //问题描述
    std::cout << "**问题描述**\n"
              << "命题1 营业员 A 或 B 偷了手表；\n"
              << "命题2 若 A 作案，则作案不在营业时间；\n"
              << "命题3 若 B 提供的证据正确，则货柜未上锁；\n"
              << "命题4 若 B 提供的证据不正确，则作案发生在营业时间；\n"
              << "命题5 货柜上了锁。\n\n";

    //命题变元表示
    std::cout << "**命题变元表示**\n"
              << "A: 营业员 A 偷了手表\n"
              << "B: 营业员 B 偷了手表\n"
              << "C: 作案不在营业时间\n"
              << "D: B 提供的证据正确\n"
              << "E: 货柜未上锁\n\n";

    std::cout << "**符号化命题表示**\n";

    // 输出每个命题的符号化表达式
    std::cout << "命题1: 营业员 A 或 B 偷了手表\n"
            << "符号化: A ∨ B\n"; // A 或 B 偷了手表

    std::cout << "命题2: 若 A 作案，则作案不在营业时间\n"
            << "符号化: A → C\n"; // 若 A 作案，则作案不在营业时间

    std::cout << "命题3: 若 B 提供的证据正确，则货柜未上锁\n"
            << "符号化: D → E\n"; // 若 B 提供的证据正确，则货柜未上锁

    std::cout << "命题4: 若 B 提供的证据不正确，则作案发生在营业时间\n"
            << "符号化: ¬D → ¬C\n"; // 若 B 提供的证据不正确，则作案发生在营业时间

    std::cout << "命题5: 货柜上了锁\n"
            << "符号化: ¬E\n\n"; // 货柜上了锁

    std::cout << "**复合命题表示**\n";
    std::cout << "复合命题: (A ∨ B) ∧ (A → C) ∧ (D → E) ∧ (¬D → ¬C) ∧ ¬E\n\n";

    std::cout<<"**C++语言代码表示**\n";
    std::cout<<"C++语言代码: (A || B) && (!A || C) && (!D || E) && (D || !C) && !E\n\n";


    //命题推理过程
    // x 从 0 到 31, 对应二进制 00000 到 11111
    for (int x = 0; x <= 31; x++) {
        // 通过位操作提取每一位
        // >>: 右移运算符;  &: 按位与运算符
        const bool A = (x >> 4) & 1;
        const bool B = (x >> 3) & 1;
        const bool C = (x >> 2) & 1;
        const bool D = (x >> 1) & 1;
        const bool E = x & 1;

        // 判断逻辑条件
        if ((A || B) && (!A || C) && (!D || E) && (D || !C) && !E) {
            std::cout << "A=" << A << ", B=" << B << "\n";


            std::cout << "推理结果是: 是营业员" << (A ?" A ": " B ") << "偷了手表\n\n";
            std::cout << "欢迎下次再次使用!\n";
            return 0;
        }
    }
    std::cout << "没有找到符合条件的解。\n";

    return 0;
}